package org.sasanlabs.service.vulnerability.jwt.keys;

/**
 * Bean holding information stored in SymmetricAlgoKeys.json present in scripts/JWT
 *
 * @author KSASAN preetkaran20@gmail.com
 */
public class SymmetricAlgorithmKey {

    private String algorithm;

    private KeyStrength strength;

    private String key;

    public String getAlgorithm() {
        return algorithm;
    }

    public void setAlgorithm(String algorithm) {
        this.algorithm = algorithm;
    }

    public KeyStrength getStrength() {
        return strength;
    }

    public void setStrength(KeyStrength strength) {
        this.strength = strength;
    }

    public String getKey() {
        return key;
    }

    public void setKey(String key) {
        this.key = key;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((algorithm == null) ? 0 : algorithm.hashCode());
        result = prime * result + ((key == null) ? 0 : key.hashCode());
        result = prime * result + ((strength == null) ? 0 : strength.hashCode());
        return result;
    }

    @Override
    public String toString() {
        return "SymmetricAlgorithmKey [algorithm="
                + algorithm
                + ", strength="
                + strength
                + ", key="
                + key
                + "]";
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;
        SymmetricAlgorithmKey other = (SymmetricAlgorithmKey) obj;
        if (algorithm == null) {
            if (other.algorithm != null) return false;
        } else if (!algorithm.equals(other.algorithm)) return false;
        if (key == null) {
            if (other.key != null) return false;
        } else if (!key.equals(other.key)) return false;
        if (strength != other.strength) return false;
        return true;
    }
}
