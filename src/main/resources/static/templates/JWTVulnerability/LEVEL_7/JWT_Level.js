function addingEventListenerToFetchTokenButton() {
  document
    .getElementById("fetchTokenButton")
    .addEventListener("click", function () {
      let url = getUrlForVulnerabilityLevel();
      url = url + "?fetch=true";
      let xmlHttpRequest = getXMLHttpRequest(fetchTokenCallBack, url, true);
      xmlHttpRequest.send();
    });
}
addingEventListenerToFetchTokenButton();

function addingEventListenerToVerifyToken() {
  document.getElementById("verifyToken").addEventListener("click", function () {
    let url = getUrlForVulnerabilityLevel();
    let xmlHttpRequest = getXMLHttpRequest(
      updateUIWithVerifyResponse,
      url,
      true
    );
    xmlHttpRequest.setRequestHeader(
      "Authorization",
      document.getElementById("jwt").innerText
    );
    xmlHttpRequest.send();
  });
}

addingEventListenerToVerifyToken();

function updateUIWithVerifyResponse(data) {
  if (data.isValid) {
    document.getElementById("verificationResponse").innerHTML = "JWT is valid";
  } else {
    document.getElementById("verificationResponse").innerHTML =
      "JWT: " + data.content + " is not valid. Please try again";
  }
}

function fetchTokenCallBack(data) {
  document.getElementById("jwt").innerHTML = data.content;
  document.getElementById("description").style.visibility = "visible";
}

function getXMLHttpRequest(callBack, url, isJson) {
  let xmlHttpRequest = new XMLHttpRequest();
  xmlHttpRequest.onreadystatechange = function () {
    genericResponseHandler(xmlHttpRequest, callBack, isJson);
  };
  xmlHttpRequest.open("GET", url, true);
  xmlHttpRequest.setRequestHeader(
    "Content-Type",
    isJson ? "application/json" : "text/html"
  );
  return xmlHttpRequest;
}
