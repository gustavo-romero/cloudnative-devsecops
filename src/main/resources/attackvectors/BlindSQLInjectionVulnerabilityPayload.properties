BLIND_SQL_INJECTION_PAYLOAD_LEVEL_1=As Blind SQL Injection doesn't show any internal details like errors or table data. However, it does allow asking a set of questions to the database which results in <b>true</b> or <b>false</b> based on the data present in the database. Similarly, hackers use the same technique to retrieve entire data from the database.<br/>\
 <b>How to exploit this level?</b><br/>\
  If you check for <code>carid</code> as <code>100</code>, you will find that it is not present in the database and this is because of where clause <code>carid = 100</code> evaluated to <code>false</code>. What if we insert <code>carid </code> as <code>100 OR 2=2</code> then if SQL injection is there then it will evaluate to <code>true</code>. Let's check by inserting the following statements in the textbox.<br/>\
  <code>100 OR 2=2</code><br/>\
  Expected result:<br/>\
  <code>{ "isCarPresent": true }</code><br/>\
 Similarly if you check for <code>carid</code> as <code>1</code>, you will find that it is present in the database but, what if we insert <code>carid </code> as <code>1 AND 1=2</code>, it will be evaluated to <code>false</code>. Let's check by inserting following statement in the textbox:<br/>\
  <code>1 AND 1=2</code><br/>\
  Expected result:<br/>\
  <code>{ "isCarPresent": false }</code><br/>
BLIND_SQL_INJECTION_PAYLOAD_LEVEL_2=As Blind SQL Injection doesn't show any internal details like errors or table data. However, it does allow asking a set of questions to the database which results in <b>true</b> or <b>false</b> based on the data present in the database. Similarly, hackers use the same technique to retrieve entire data from the database.<br/>\
 <b>How to exploit this level?</b><br/>\
 Following inputs <code>1 OR 2=2</code> and <code>1 AND 1=2</code> returns <code>System Error Occurred. please check logs</code>. It doesn't evaluate to <code>true</code> or <code>false</code><br/>\
  This is because of the additional security added by surrounding value of <code>id</code> parameter with quotes. E.g. <code>id='value'</code> <br/>\
  So now we have to insert the following statements in the textbox:<br/>\
  <code>100'OR '1'='1</code><br/>\
  Expected result:<br/>\
  <code>{ "isCarPresent": true }</code><br/>\
  Similarly,  expression can be evaluated to <code>false</code> by inserting following statement into the textbox:<br/>\
  <code>1'AND '1'='2</code><br/>\
  Expected result:<br/>\
  <code>{ "isCarPresent": false }</code><br/>\
  As we see <code>false</code> is returned despite the fact that <code>carid = 1</code> is present in the table.
